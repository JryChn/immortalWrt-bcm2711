name: Build ImmortalWrt

on:
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - master  # 可根据需要修改分支

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新版Ubuntu运行环

    steps:
      - name: 设置Ubuntu环境依赖
        run: |
          sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
 
      - name: 释放空间开始
        run: |
          echo "Before freeing up disk space"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="

      - name: 优化空间
        uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
        with:
          operate_sudo: "True"
          general_include: ".+"
          general_exclude: |-
            ^GCC$
            ^G\+\+$
            Clang
            LLVM
          docker_include: ".+"
          docker_prune: "True"
          docker_clean: "True"
          apt_prune: "True"
          apt_clean: "True"
          homebrew_prune: "True"
          homebrew_clean: "True"
          npm_prune: "True"
          npm_clean: "True"
          os_swap: "True"

      - name: 整合释放空间
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 1
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: 释放空间完成
        run: |
          echo "Free up disk space complete"
          echo "=============================================================================="
          df -hT
          echo "=============================================================================="
      
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: Setup ccache
        uses: actions/cache@v3
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: 克隆ImmortalWrt仓库
        run: |
          git clone --depth=1 --single-branch --filter=blob:none -b openwrt-24.10 https://github.com/immortalwrt/immortalwrt

      - name: Cache downloads
        uses: actions/cache@v3
        with:
          path: ./immortalwrt/dl
          key: ${{ runner.os }}-dl-${{ hashFiles('.config') }}
          restore-keys: |
            ${{ runner.os }}-dl-

      - name: 更新并安装feeds
        working-directory: ./
        run: |
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Cache feeds
        uses: actions/cache@v3
        with:
          path: ./immortalwrt/feeds
          key: ${{ runner.os }}-feeds-${{ hashFiles('immortalwrt/feeds.conf.default') }}
          restore-keys: |
            ${{ runner.os }}-feeds-

      - name: 复制配置文件
        run: |
          cp .config immortalwrt/

      - name: 编译固件
        id: compile
        run: |
          cd immortalwrt
          make defconfig
          make download -j$(nproc)
          make -j$(nproc)

      - name: 上传固件
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_bin
          path: immortalwrt/bin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/immortalwrt:latest,${{ secrets.DOCKER_USERNAME }}/immortalwrt:${{ github.sha }}
          platforms: linux/arm64


#      - name: 删除workflow运行
#        uses: Mattraks/delete-workflow-runs@main
#        with:
#          retain_days: 0
#          keep_minimum_runs: 2

      - name: 移除旧Release
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
